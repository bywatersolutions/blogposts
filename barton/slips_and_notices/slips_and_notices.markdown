# Everything You Wanted to Know About Slips and Notices But Were Afraid to Ask

## Some terminology first:

* Notices are messages that are generated by koha and sent to patrons
* Slips are formatted similarly to notices, but can only be printed
* These are configured on the 'Notices and Slips' page.
* Repeating data on a notice or slip, such as _Title_, _Author_ or _Date Due_ is called 'detail'. These are usually bibliographic, but not always.
* The templates for notices and slips are stored in the `LETTER` table. Note that this is not plural.
* Each entry in the `LETTER` table has a `letter_code`
* `<<` and `>>` are called _Hungry Alligators_. Whatever is between the hungry alligators is being 'eaten' by the hungry alligators.
* Notices have a `message_transport_type` which tells Koha how the message is to be sent: `email`, `SMS`, `phone` or `print`.


## Life cycle of a notice

- *Something* in koha looks up a `LETTER` template. It will then
    - Fill in all the values being eaten by hungry alligators.
    - Add an entry into the `MESSAGE_QUEUE` table in the koha database.
- The message queue contains the borrower's email address, SMS number or phone number (depending on message transport type).
- There is a cron job called `process_message_queue.pl` which looks at all of the pending messages in the `MESSAGE_QUEUE` and sends them out via the appropriate message transport (almost always email).
- We can look at the mail server logs to see if the notice was successfully sent. If so, it's out of our hands.

## OK, that was easy. So what's the big deal about notices?

The problem with notices is that there are about 15 different 'Somethings' that send notices, and they don't agree on what the `LETTER` templates should look like. In particular, they're bad about how they handle detail.

To help me get a handle on this, I wrote the [Notices markup](https://wiki.koha-community.org/wiki/Customising_Notices_and_Slips#Notice_Markup) page on the Koha wiki. This is broken down by letter code, 'Used in' (i.e. the *Something*), mentioned above, the detail syntax, and 'Accessible data'.

## Notable *Something*s

### Notices cron jobs

- `overdue_notices.pl`
- `advance_notices.pl`
    * `DUEDGST|PREDUEDGST` -- Use `<<items.content>>` for detail. This is one of the most frequent errors that we have in RT.
- `process_message_queue.pl`
- `gather_print_notices.pl`

### C4/Circulation.pm

- `CHECKOUT`
- `RENEWAL`
- `CHECKIN`

## Template toolkit: An effort to stem the madness.

* [Examples here](https://wiki.koha-community.org/wiki/Notices_and_Slips_Library#Notices_and_slips_using_template_toolkit)
